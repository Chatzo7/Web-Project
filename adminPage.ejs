<!DOCTYPE html>
<html lang="en">

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
    <title>Admin</title>
</head>

<body>
    <div class="mb-3">
        
        <h2 style="text-align:center">ADMIN</h2>
        <label class="form-label">Ανεβάστε αρχείο json</label>
        <input class="form-control" type="file" accept=".json" id="formFile">
        <button onclick="uploadsfile()" class="btn btn-primary">Upload</button>


        <!-- Button trigger modal -->
        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
            Διαγραφή ολων των δεδομένων
        </button>

        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
            aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Ειστε σιγουροι πως θελετε να διαγραψετε τα παντα
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Οχι</button>
                        <button onclick="deleteAllData()" type="button" class="btn btn-primary">Ναι</button>
                    </div>
                </div>
            </div>
        </div>

        <div style="text-align:center">
            <h3>Απεικόνιση Στατιστικών</h3>
            <h6>Συνολικός αριθμός επισκέψεων που έχουν καταγραφεί</h6>
            <h6>Συνολικός αριθμός κρουσμάτων που έχουν δηλωθεί</h6>
        </div>
        <canvas style="margin: auto" id="myChart" width="1000" height="500"></canvas>
        <div style="text-align:center">
            <h6>

                Κατάταξη των κατηγοριών σημείων ενδιαφέροντος που υπάρχουν στη ΒΔ του συστήματος,
                με βάση τον αριθμό κρουσμάτων που είχαν προσέλθει σε αυτά, έως και 7 ημέρες πριν την
                ημερομηνία διάγνωσης κρούσματος και μέχρι 14 ημέρες μετά

            </h6>
        </div>
        <canvas style="margin: auto" id="myChart2" width="1000" height="500"></canvas>
    </div>
</body>

<script>
    async function fetching() {
        const resp = await fetch('/admin_data');
        const data = await resp.json();
        console.log(data);
        const a = [1,2,43,54]
        console.log([...Object.keys(data.popularity), ...a]);
        console.log(...Object.values(data.popularity));

        // chart 1 
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['αριθμός επισκέψεων ', 'αριθμός κρουσμάτων ', ],
                datasets: [{
                    label: '',
                    data: [data.totalVisits, data.totalInfections ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


        // chart 2 
        const ctx2 = document.getElementById('myChart2').getContext('2d');
        const myChart2 = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: [...Object.keys(data.popularityInfected)],
                datasets: [{
                    label: '',
                    data: [...Object.values(data.popularityInfected)],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    }


    fetching();
</script>

<script>
    async function uploadsfile() {
        const formData = new FormData();

   
        const file = document.getElementById('formFile').files[0]
        console.log(file);
        formData.append('file1', file)

        fetch('/upload_data', {
            method: 'POST',
            body: formData
        })
    }

    async function deleteAllData() {
        const a = await fetch('/delete_all', { method: "DELETE" })
        if (a.status == 200) {
            alert('data deleted')
        } else {
            alert('something went wrong')
        }
    }
</script>


<script>

</script>

</html>